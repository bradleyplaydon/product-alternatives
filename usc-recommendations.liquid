 {% assign showXtypes = section.settings.show_on_thesetypes | split: ',' %}
 {% assign showalt = false %}
  {% unless type == product.type %}
  {% assign showalt = true %}
  {% endunless %}
{% assign sizetagExst = false %}
{% for tag in product.tags %}
{% if tag contains 'Size' %}
{% assign sizetagExst = true %}
{% endif %}
{% endfor %}
{% if section.settings.show_recommendations_on_type and showalt == true and product.available != true and sizetagExst == true %}
<style>
    .image-wrapper {
        height: 170px;
    }
</style>
<script>
$(document).ready(function(){
    var sectionTitle = "{{ section.settings.section_title }}";
    $('#brad-alternatives').append("<div class='card'><div class='card__header'><h2 class='card__title heading h3'>"+sectionTitle+"</h2></div><div class='brad-alternatives'></div></div>");
    var productAvailable = {{ product.available }};
     var thisProdType = "{{ product.type }}"; 
    {% for variant in product.variants %}
    var thisProdSKU = "{{ variant.sku }}";
    {% endfor %}
  
    var thisProdTags = {{ product.tags | split: "" }};
    for(var thisProdTag = 0; thisProdTag < thisProdTags.length; thisProdTag++){
      if(thisProdTags[thisProdTag].includes("Size")){
       var thisProdSize = thisProdTags[thisProdTag];
      }
    }
    var thisProdOptions = [];
    var productSizeOptions = []
    {% for product_option in product.options_with_values %}
    {% if product_option.name == 'Size' %}
    {% for val in product_option.values %}
    thisProdOptions.push("{{val}}");
    {% endfor %}
    {% endif %}
    {% endfor %}
    var limittoshow = {{ section.settings.num_recommendations_to_show }};                     
    var loopCount = 0;
  $.ajax({
  type : 'POST',
  url : '/api/2020-07/graphql.json',
  headers: {
    'X-Shopify-Storefront-Access-Token': '235bd1ea4d8c08d31192fbba2cf5b21d',
    'Content-Type': 'application/json',
    'accept': 'application/json'
  },
  data: JSON.stringify({
  query: `query ($productType: String!) {
  products(first: 250, query: $productType) {
    edges {
      node {
        id
        handle
        description
        productType
        title
        tags
        options {
          name
          values
        }
        images(first: 10) {
          edges {
            node {
              src
            }
          }
        }
        variants(first: 250) {
          edges {
            node {
              sku
              price
              quantityAvailable
              id
            }
          }
        }
      }
    }
  }
}
`,
  variables: {
      "productType": thisProdType
  }
  }),
  success: function(result) {
    var resultString = JSON.stringify(result);
    var parsedResult = JSON.parse(resultString);
   var productS = result.data.products.edges
   console.log(productS)
   for(var prod in productS){
        
        var productTitle = productS[prod].node.title;
        var productType = productS[prod].node.productType;
        var productTags = productS[prod].node.tags;
        var RightSizes = false; 

        for(var tag = 0; tag < productTags.length; tag++){
          if(productTags[tag].includes("Size_")){
            var Size = productTags[tag].trim(" ");
            if(Size == thisProdSize){
             var RightSizes = true; 
            }
          }
            else {
             var sizeTagExst = false;   
            }
          }
        
        var productHandle = productS[prod].node.handle;
        for(var variant in productS[prod].node.variants.edges){
        var variantSku = productS[prod].node.variants.edges[variant].node.sku;
        var variantPrice = productS[prod].node.variants.edges[variant].node.price;
        var variantID = atob(productS[prod].node.variants.edges[variant].node.id).substring(29);
        var variantInventory = productS[prod].node.variants.edges[variant].node.quantityAvailable;
        }
        for(var img in productS[prod].node.images.edges){
         var prodImages = productS[prod].node.images.edges[0].node.src; 
        }
        for(var option in productS[prod].node.options){
         var productSizeOption = productS[prod].node.options[option].name;
          if(productSizeOption == "Size"){
           var productOptionSizeVal =  productS[prod].node.options[option].values;
            for(var optionVal in productOptionSizeVal){
              productSizeOptions.push(productOptionSizeVal[optionVal]);
            }
          }
            else {
                var sizeOptionExst = false;
            }
        }
        var similarProd = false;
        for(var i = 0; i < productSizeOptions.length; i++){
          if(productSizeOptions[i] == thisProdOptions[0]){
          var similarProd = true;
          }
        }
          /* products that are the same type and same size based upon Size_ tag or product options */
          if(RightSizes == true || similarProd == true){
         if(thisProdType == productType && thisProdSKU != variantSku && productAvailable != true && similarProd == true && variantInventory > 0 || thisProdType == productType && thisProdSKU != variantSku && productAvailable != true && variantInventory > 0 && RightSizes == true){
        loopCount++;
             
      $('#brad-alternatives > .card > .brad-alternatives').append("<div class='product-form__info-item'><div><div class='image-wrapper'><a href="+"/products/"+productHandle+"><img src="+prodImages+"/></a></div><div class='product-item__info'><div class='product-item__info-inner'><div class='product-item__price-list price-list'><span class='price'>Â£"+variantPrice+"<span style='font-size:12px;'>Exc VAT</span></span></div></div><a class='product-item__title' href="+"/products/"+productHandle+">"+productTitle+"</a></div></div><form method='post' id='usc-recommendations' accept-charset='UTF-8' class='product-item__action-list button-stack' encytype='multipart/form-data'><input type='hidden' name='quantity' value='1'><input type='hidden' name='id' value="+variantID+"><button type='submit' value="+variantID+" class='product-item__action-button usc-add button button--small button--primary' >Add to cart</button> </form></div>");
             
      }
        }
        
      /* 
      if(loopCount == 0 && thisProdType == productType && thisProdSKU != variantSku && productAvailable != true && similarProd == false and RightSizes == false){
          
      }
      */
      if(loopCount == limittoshow){
          break;
      }
      }
      document.querySelectorAll('.usc-add').forEach(item => {
            console.log(item)
    item.addEventListener('click', event => {
        event.preventDefault();
        jQuery.ajax({
            url: '/cart/add.js',
            type: 'post',
            dataType: 'json',
            data: {
                quantity: 1,
                id: item.value
            },
            // Optional: success/error functions
            success: function(itemData) {
                document.documentElement.dispatchEvent(new CustomEvent('product:added', {
                    bubbles: true,
                    detail: {
                        quantity: 1
                    }
                }));
            },
            error: function(XMLHttpRequest) {
                console.log(XMLHttpRequest)
            }
        });
    })


})   
  },
  error: function(status) {
    console.log(status)
  }
});
})
    
</script>
<style>
  .brad-alternatives {
   display: flex; 
   flex-wrap:wrap;
   justify-content:center;
  }
  .brad-alternatives > .product-form__info-item {
   width:165px; 
   padding:10px;
  }
</style>
{% endif %}
{% if section.settings.show_recommendations_on_type and showalt == true and product.available != true and sizetagExst == false %}
<section class="section" data-section-id="{{ section.id }}" data-section-type="usc-recommendations">
<div class="card">
  <div class="card__header"><h2 class="card__title heading h3">Alternatives</h2></div>
 <div class="product-alternatives">

 </div>
</div>
</section>
<script>
$(document).ready(function(){
    var productAvailable = {{ product.available }};
     var thisProdType = "{{ product.type }}"; 
    {% for variant in product.variants %}
    var thisProdSKU = "{{ variant.sku }}";
    {% endfor %}
  
    var thisProdTags = {{ product.tags | split: "" }};
    for(var thisProdTag = 0; thisProdTag < thisProdTags.length; thisProdTag++){
      if(thisProdTags[thisProdTag].includes("Size")){
       var thisProdSize = thisProdTags[thisProdTag];
      }
    }
    var thisProdOptions = [];
    var productSizeOptions = []
    {% for product_option in product.options_with_values %}
    {% if product_option.name == 'Size' %}
    {% for val in product_option.values %}
    thisProdOptions.push("{{val}}");
    {% endfor %}
    {% endif %}
    {% endfor %}
    var limittoshow = {{ section.settings.num_recommendations_to_show }};                     
    
  $.ajax({
    method: 'GET',
    url: "https://5ded537e86ed15ebcc318e6db91504f0:c5e4fb538cc83eaf53960fffba2f7440@univar-sc-plus.myshopify.com/admin/api/2020-07/products.json?product_type="+thisProdType+"",
    headers: {
    'Content-Type': 'application/json',
    'Authorization': 'Bearer' 
  },
    success: function (result){
      var resultString = JSON.stringify(result);
      var parsedResult = JSON.parse(resultString);
      console.log(parsedResult)
      var loopCount = 0;
      for(var prod in parsedResult.products){
        var productObj = parsedResult.products[prod];
        var productTitle = productObj.title;
        var productType = productObj.product_type;
        var productTags = productObj.tags.split(",");
        var RightSizes = false; 

        for(var tag = 0; tag < productTags.length; tag++){
          if(productTags[tag].includes("Size_")){
            var Size = productTags[tag].trim(" ");
            if(Size == thisProdSize){
             var RightSizes = true; 
            }
          }
            else {
             var sizeTagExst = false;   
            }
          }
        
        var productHandle = productObj.handle;
        for(var variant in productObj.variants){
        var variantSku = productObj.variants[variant].sku;
        var variantPrice = productObj.variants[variant].price;
        var variantID = productObj.variants[variant].id;
        var variantInventory = productObj.variants[variant].inventory_quantity;
        }
        for(var img in productObj.images){
         var prodImages = productObj.images[img].src; 
        }
        for(var option in productObj.options){
         var productSizeOption = productObj.options[option].name;
          if(productSizeOption == "Size"){
           var productOptionSizeVal =  productObj.options[option].values;
            for(var optionVal in productOptionSizeVal){
              productSizeOptions.push(productOptionSizeVal[optionVal]);
              
              
            }
          }
            else {
                var sizeOptionExst = false;
            }
        }
        var similarProd = false;
        for(var i = 0; i < productSizeOptions.length; i++){
          if(productSizeOptions[i] == thisProdOptions[0]){
          var similarProd = true;
          }
        }
          /* products that are the same type and same size based upon Size_ tag or product options */
         if(thisProdType == productType && thisProdSKU != variantSku && productAvailable != true && variantInventory > 0){
        loopCount++;
             
      $('.product-alternatives').append("<div class='product-form__info-item'><div><a href="+"/products/"+productHandle+"><img src="+prodImages+"/></a><div class='product-item__info'><div class='product-item__info-inner'><div class='product-item__price-list price-list'><span class='price'>Â£"+variantPrice+"<span style='font-size:12px;'>Exc VAT</span></span></div></div><a class='product-item__title' href="+"/products/"+productHandle+">"+productTitle+"</a></div></div><form method='post' action='/cart/add' id='usc-recommendations' accept-charset='UTF-8' class='product-item__action-list button-stack' encytype='multipart/form-data'><input type='hidden' name='quantity' value='1'><input type='hidden' name='id' value="+variantID+"><button type='submit' class='product-item__action-button button button--small button--primary' data-action='add-to-cart'>Add to cart</button> </form></div>");
             
      }
      
      /* 
      if(loopCount == 0 && thisProdType == productType && thisProdSKU != variantSku && productAvailable != true && similarProd == false and RightSizes == false){
          
      }
      */
      if(loopCount == limittoshow){
          break;
      }
      }
   
     
         
   },
    error: function (error){
     console.log(error + "Error"); 
    }
})
     document.querySelectorAll('.usc-add').forEach(item => {
    item.addEventListener('click', event => {
        event.preventDefault();
        jQuery.ajax({
            url: '/cart/add.js',
            type: 'post',
            dataType: 'json',
            data: {
                quantity: 1,
                id: 30747330936906
            },
            // Optional: success/error functions
            success: function(itemData) {
                document.documentElement.dispatchEvent(new CustomEvent('product:added', {
                    bubbles: true,
                    detail: {
                        quantity: 1
                    }
                }));
            },
            error: function(XMLHttpRequest) {
                console.log(XMLHttpRequest)
            }
        });
    })


})
})
</script>
<style>
  .product-alternatives {
   display: flex; 
   flex-wrap:wrap;
   justify-content:center;
  }
  .product-alternatives > .product-form__info-item {
   width:165px; 
   padding:10px;
  }
</style>
{% endif %}
{% schema %}
{
  "name": "Product Alternatives",
  "settings": [
    {
        "type": "text",
        "id": "section_title",
        "label": "Heading that appears above the products"
    },
    {
	  "type": "checkbox",
	  "id": "show_recommendations_on_type",
	  "label": "Enable recommendations based upon product type & size",
      "info": "This has been setup to only show on product types that have been declared below and on products of that type which are out of stock.",
	  "default": false
	},
    {
	  "type": "range",
	  "id": "num_recommendations_to_show",
  	  "min": 1,
	  "max": 20,
	  "step": 1,
	  "label": "Number of Alternatives to show",
	  "default": 3
	},
    {
      "type": "text",
      "id": "show_on_thesetypes",
      "label": "Alternatives will only show on types comma separated"
    }

  ]
}
{% endschema %}